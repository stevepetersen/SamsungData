sapply(split_data, mean)
colMeans(split_data, 2)
colMeans(split_data)
str(split_data)
lapply(split_data, mean)
lapply(split_data, function(x) mean(x.Ranking))
lapply(split_data, function(x) mean(x$Ranking))
head(merged_data)
cut_data <- cut(merged_data, 5)
cut_data <- cut(merged_data$Ranking, 5)
cut_data
table(cut_data)
cut_data <- table(cut(merged_data$Ranking, 5), merged_data$Income.Group)
cut_data
cut_data <- table(cut(merged_data$Ranking, c(20,40,60,80,100)), merged_data$Income.Group)
cut_data
cut_data <- table(cut(merged_data$Ranking, c(0, 20,40,60,80,100)), merged_data$Income.Group)
cut_data
cut_data <- table(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20)), merged_data$Income.Group)
cut_data <- table(cut(merged_data$Ranking, breaks=c(quantile(df$orders, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100"), merged_data$Income.Group)
)
cut_data <- table(cut(merged_data, breaks=c(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100"), merged_data$Income.Group))
cut_data <- table(cut(merged_data$Ranking, breaks=c(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100"), merged_data$Income.Group))
)
cut_data
cut_data <- table(cut(merged_data$Ranking, breaks=c(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100")), merged_data$Income.Group)
cut_data
cut_data <- table(cut(merged_data$Ranking, breaks=c(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100")), gdp$Income.Group)
cut_data <- table(cut(merged_data$Ranking, breaks=c(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100")), merged_data$Income.Group)
cut_data
edu
gdp
head(gdp)
head(edu)
sorted_data = merged_data[order(desc(merged_data$Ranking), ]
sorted_data = merged_data[order(desc(merged_data$Ranking)), ]
sorted_data = merged_data[order(-merged_data$Ranking), ]
head(sorted_data, 20)
nrow(sorted_data)
cut_data <- table(cut(merged_data$Ranking, breaks=c(quantile(merged_data$Ranking, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100")), merged_data$Income.Group)
cut_data
cut_data <- table(cut(merged_data$Ranking, 5), merged_data$Income.Group)
cut_data
pwd
getwd()
setwd("~/Code/SamsungData")
getwd()
test <- read.table("UCI HAR Dataset/test/X_test.txt")
getwd()
setwd("~/Code/SamsungData")
test <- read.table("UCI HAR Dataset/test/X_test.txt")
head(test)
nrow(test)
test <- read.table("UCI HAR Dataset/train/X_train.txt")
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test_label <- read.table("UCI HAR Dataset/test/Y_test.txt")
nrow(test_label)
head(test_label)
subject_label <- read.table("UCI HAR Dataset/test/subject_test.txt")
head(subject_label)
nrow(subject_label)
activity_label <- read.table("UCI HAR Dataset/activity_labels.txt")
activity_label
feature_label <- read.table("UCI HAR Dataset/features.txt")
head (feature_label)
head(test)
test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = feature_label$V2)
head(test)
head(test_features)
head(test)
feature_names
feature_labels
labels
feature_labels <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
feature_labels
subset(feature_labels$V2, grep())
retained_feature_labels <- feature_labels[, grep("mean", feature_labels$V2)]
feature_label
retained_feature_labels <- feature_label[, grep("mean", feature_label$V2)]
retained_feature_labels <- feature_label[, grep("mean", V2)]
retained_feature_labels <- subset(feature_label, function(x) grep("mean", x)]
retained_feature_labels <- subset(feature_label, function(x) grep("mean", x))
retained_feature_labels <- subset(feature_label, function(x) grepl("mean", x))
grepl("mean", "foo")
grep("mean", "foo")
feature_label
retained_feature_labels <- subset(feature_label$V2, function(x) grepl("mean", x))
grep("mean", "foo", fixed=TRUE)
grepl("mean", "foo", fixed=TRUE)
grepl("mean", "foo_mean()", fixed=TRUE)
retained_feature_labels <- subset(feature_label$V2, grepl("mean", x))
retained_feature_labels
retained_feature_labels <- subset(feature_label$V2, grepl("mean()", x))
retained_feature_labels
retained_feature_labels <- subset(feature_label$V2, function(x) grepl("mean()", x))
subsetLogical = grepl("mean()", feature_label$V2) | grepl("std()", feature_label$V2)
retained_feature_labels <- subset(feature_label, subsetLogical)
retained_feature_labels
subsetLogical <- which(names(test_features) %in% retained_feature_labels$V2)
test
subsetLogical <- which(names(test) %in% retained_feature_labels$V2)
subsetLogical
names(test)
feature_labels
retained_feature_labels
subsetLogical <- which(names(test) %in% retained_feature_labels$V2)
subsetLogical
test.2 <- test[, -which(names(test) %in% retained_feature_labels$V2]
test.2 <- test[, -which(names(test) %in% retained_feature_labels$V2)]
test.2
retained_feature_labels$V2
retained_feature_labels$V2 <- factor(retained_feature_labels$V2)
retained_feature_labels$V2
test.2 <- test[, -which(names(test) %in% retained_feature_labels$V2)]
test.2
test.2 <- test[, which(names(test) %in% retained_feature_labels$V2)]
test.2
head(test.2)
retained_feature_labels
colnames(test)
colnames(test) %in% retained_feature_names$V2
colnames(test) %in% retained_feature_name$V2
retained_feature_names
View(retained_feature_labels)
colnames(test) %in% retained_feature_labels$V2
str(retained_feature_names)
str(retained_feature_labels)
options( StringsAsFactors=F )
feature_labels <- read.table("UCI HAR Dataset/features.txt")
str(feature_labels)
options( StringsAsFactors=FALSE )
feature_labels <- read.table("UCI HAR Dataset/features.txt")
str(feature_labels)
feature_labels <- read.table("UCI HAR Dataset/features.txt", StringsAsFactors=FALSE)
options( stringsAsFactors=FALSE )
feature_labels <- read.table("UCI HAR Dataset/features.txt", StringsAsFactors=FALSE)
feature_labels <- read.table("UCI HAR Dataset/features.txt")
str(feature_labels)
options( StringsAsFactors=FALSE )
feature_labels <- read.table("UCI HAR Dataset/features.txt")
meanAndStdLogical <- grepl("mean()", feature_labels$V2) | grepl("std()", feature_labels$V2)
retained_feature_labels <- subset(feature_labels, meanAndStdLogical)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
subsetLogical <- which(names(test_features) %in% retained_feature_labels$V2)
options( StringsAsFactors=FALSE )
feature_labels <- read.table("UCI HAR Dataset/features.txt")
meanAndStdLogical <- grepl("mean()", feature_labels$V2) | grepl("std()", feature_labels$V2)
retained_feature_labels <- subset(feature_labels, meanAndStdLogical)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
subsetLogical <- which(names(test_features) %in% retained_feature_labels$V2)
subsetLogical <- which(colnames(test) %in% retained_feature_labels$V2)
subsetLogical
retained_feature_labels
str(retained_feature_labels)
colnames(test)
colnames(test) in retained_feature_labels$V2
colnames(test) %in% retained_feature_labels$V2
colnames(test)
feature_labels
test_features <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = feature_labels$V2)
subsetLogical <- which(names(test_features) %in% retained_feature_labels$V2)
subsetLogical
colnames(test_features)
test_features <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = feature_labels$V2, check.names = FALSE)
str(test_features)
subsetLogical <- which(names(test_features) %in% retained_feature_labels$V2)
subsetLogical
subsetLogical <- which(colnames(test_features) %in% retained_feature_labels$V2)
test_features <- test_features[,subsetLogical]
test_features
colnames(test_features)
str(test_features)
activity_labels
activity_factor <- factor(activity_labels$V1, activity_labels$V2)
activity_factor
activity_labels
str(activity_labels)
activity_factor <- factor(activity_labels$V1, levels=activity_labels$V2)
activity_factor
str(activity_labels$V1)
activity_factor <- factor(activity_labels$V1, levels=activity_labels$V2,ordered=TRUE)
activity_factor
activity_factor <- factor(activity_labels$V1, levels=activity_labels$V2)
test_activity
test_activity <- read.table("UCI HAR Dataset/test/y_test.txt")
test_activity
merge(test_activity, activity_labels, by.x=V1, by.y=V1)
str(test_activity)
str(activity_labels)
merge(test_activity, activity_labels, by.x=test_activity$V1, by.y=activity_labels$V1)
names(activity_labels$V2)[match(test_activity, activity_labels$V2)]
names(activity_labels$V2)[match(test_activity$V2, activity_labels$V2)]
names(activity_labels$V2)[match(test_activity$V1, activity_labels$V2)]
names(activity_labels$V2)
str(activity_labels)
match(test_activity$V1, activity_labels$V2)
activity_factor <- factor(activity_labels$V1, activity_labels$V2)
activity_factor
activity_labels$V1
activity_factor <- factor(activity_labels$V2)
activity_factor
test
test_features$subject <- test_subject
test_features$activity <- test_activity
test_subject <- read.table("UCI HAR Dataset/test/subject_test.txt")
test_features$subject <- test_subject
test_features$activity <- test_activity
str(test_features)
test_features$subject <- test_subject$V1
test_features$activity <- test_activity$V1
str(test_features)
test_features$subject <- test_subject$V1
test_features$activity <- test_activity$V1
merge(test_activity, activity_labels, by.x=test_activity$V1, by.y=activity_labels$V1)
merge(test_activity, activity_labels, by.x=test_activity$V1, by.y=activity_labels$V1, all.x=T)
merge(test_activity, activity_labels, by.x=test_activity$V1, all.x=T)
merge(test_activity, activity_labels, all.x=T)
test_activity
activity_labels
merge(test_activity, activity_labels, all.x=T)
activity_labels
test_activity
merge(test_activity, activity_labels, all.x=T)
str(test_activity)
str(activity_labels)
merge(test_activity, activity_labels, by="V1")
test_activity
merge(test_activity, activity_labels, by="V1")
merge(test_activity, activity_labels, by="V1")
str(test_activity)
str(activity_labels)
merge(test_activity, activity_labels, by="V1", all.x=TRUE)
merge(test_activity, activity_labels, by="V1", all.x=TRUE)
merge(activity_labels, test_activity, by="V1", all.x=TRUE)
merge(test_activity, activity_labels, by="V1")
merge(test_activity, activity_labels, by="V1", all=TRUE)
test2 <- merge(test_activity, activity_labels, by="V1", all=TRUE)
test2
head(test2)
str(test_activity)
str(activity_labels)
test2 <- merge(test_activity, activity_labels, by="V1", all.y=T)
test2
test2 <- merge(test_activity, activity_labels, by="V1", all.y=T)
str(test_activity)
str(activity_labels)
test2 <- merge(test_activity, activity_labels)
test2
head(test2)
head(test)
head(test_activity)
head(test2)
test2 <- merge(test_activity, activity_labels, by="V1")
head(test2)
test2 <- merge(test_activity, activity_labels, by="V1", sort=F)
head(test2)
options( StringsAsFactors=FALSE )
feature_labels <- read.table("UCI HAR Dataset/features.txt")
meanAndStdLogical <- grepl("mean()", feature_labels$V2) | grepl("std()", feature_labels$V2)
retained_feature_labels <- subset(feature_labels, meanAndStdLogical)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
#read and create the test subset
test_features <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = feature_labels$V2, check.names = FALSE)
test_subject <- read.table("UCI HAR Dataset/test/subject_test.txt")
test_activity <- read.table("UCI HAR Dataset/test/y_test.txt")
test_activity <- merge(test_activity, activity_labels, by="V1", sort=F)
subsetLogical <- which(colnames(test_features) %in% retained_feature_labels$V2)
test_features <- subset(test_features,subsetLogical)
test_features$Subject <- test_subject$V1
test_features$Activity <- test_activity$V2
head(test_features)
subsetLogical
test_features <- subset(test_features,subsetLogical)
subsetLogical <- which(colnames(test_features) %in% retained_feature_labels$V2)
subsetLogical
retained_feature_labels$V2
str(retained_feature_labels$V2)
colnames(test_features)
colnames(test_features) %in% retained_feature_labels$V2
subsetLogical <- colnames(test_features) %in% retained_feature_labels$V2
test_features <- subset(test_features,subsetLogical)
test_features
head(test_features)
meanAndStdLogical <- grepl("mean()", feature_labels$V2, fixed=TRUE) | grepl("std()", feature_labels$V2, fixed=TRUE)
retained_feature_labels <- subset(feature_labels, meanAndStdLogical)
retained_feature_labels
subsetLogical <- colnames(test_features) %in% retained_feature_labels$V2
test_features <- subset(test_features,subsetLogical)
test_features
#read and create the train subset
train_features <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = feature_labels$V2, check.names = FALSE)
train_subject <- read.table("UCI HAR Dataset/train/subject_train.txt")
train_activity <- read.table("UCI HAR Dataset/train/y_train.txt")
train_activity <- merge(train_activity, activity_labels, by="V1", sort=F)
subsetLogical <- colnames(train_features) %in% retained_feature_labels$V2
train_features <- subset(train_features,subsetLogical)
train_features$Subject <- train_subject$V1
train_features$Activity <- train_activity$V2
train_subject
nrow(train_features)
#read and create the train subset
train_features <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = feature_labels$V2, check.names = FALSE)
train_subject <- read.table("UCI HAR Dataset/train/subject_train.txt")
train_activity <- read.table("UCI HAR Dataset/train/y_train.txt")
train_activity <- merge(train_activity, activity_labels, by="V1", sort=F)
subsetLogical <- colnames(train_features) %in% retained_feature_labels$V2
train_features <- subset(train_features,subsetLogical)
train_features$Subject <- train_subject$V1
train_features$Activity <- train_activity$V2
train_features <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = feature_labels$V2, check.names = FALSE)
nrow(train_features)
subsetLogical <- colnames(train_features) %in% retained_feature_labels$V2
subsetLogical
train_features <- subset(train_features,subsetLogical)
nrow(train_features)
train_features <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = feature_labels$V2, check.names = FALSE)
train_subject <- read.table("UCI HAR Dataset/train/subject_train.txt")
train_activity <- read.table("UCI HAR Dataset/train/y_train.txt")
train_activity <- merge(train_activity, activity_labels, by="V1", sort=F)
subsetLogical <- colnames(train_features) %in% retained_feature_labels$V2
train_features <- subset(train_features, select=subsetLogical)
train_features$Subject <- train_subject$V1
train_features$Activity <- train_activity$V2
head(train_features)
head(train_features)
all_features = merge(train_features, test_features)
str(all_features)
head(all_features)
all_features = merge(train_features, test_features)
head(train_features)
head(test_features)
options( StringsAsFactors=FALSE )
feature_labels <- read.table("UCI HAR Dataset/features.txt")
meanAndStdLogical <- grepl("mean()", feature_labels$V2, fixed=TRUE) | grepl("std()", feature_labels$V2, fixed=TRUE)
retained_feature_labels <- subset(feature_labels, meanAndStdLogical)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
#read and create the test subset
test_features <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = feature_labels$V2, check.names = FALSE)
test_subject <- read.table("UCI HAR Dataset/test/subject_test.txt")
test_activity <- read.table("UCI HAR Dataset/test/y_test.txt")
test_activity <- merge(test_activity, activity_labels, by="V1", sort=F)
subsetLogical <- colnames(test_features) %in% retained_feature_labels$V2
test_features <- subset(test_features, select=subsetLogical)
test_features$Subject <- test_subject$V1
test_features$Activity <- test_activity$V2
head(test_features)
all_features <- merge(test_features, train_features)
head(all_features)
nrow(all_features)
all_features <- merge(test_features, train_features, all=T)
nrow(all_features)
str(all_features)
all_features <- merge(test_features, train_features, all=T)
t <- table(all_features$Subject, all_features$Activity)
t
split(all_features, list(all_features$Subject, all_features$Activity))
x <- split(all_features, list(all_features$Subject, all_features$Activity))
str(x)
lapply(x, mean)
head(x)
head(all_features)
x <- split(all_features, list(all_features$Subject, all_features$Activity))
str(x)
summary(x)
summary(x[1.WALKING])
summary(x[, '1.WALKING'])
summary(x['1.WALKING'])
x['1.WALKING']
x['1.LYING']
x['1.WALKING_DOWNSTAIRS']
x['1.WALKING_UPSTAIRS']
x
head(x)
tail(x)
tail(x, 3)
tail(x, 1)
x <- split(all_features, list(all_features$Subject, all_features$Activity))
tail(x, 1)
lapply(x, colMeans)
lapply(x, function(x) colMeans(x))
lapply(x, colMeans)
lapply(x, function(x) sapply(x, mean))
warnings()
lapply(x, function(x) apply(x, mean))
lapply(x, function(x) sapply(x, mean))
warnings()
lapply(x, function(x) sapply(x[, .SDCols=retained_feature_labels$V2], mean))
lapply(x, function(x) sapply(x[, c(1:20)], mean))
lapply(x, function(x) sapply(x[, .SDCols=retained_feature_labels$V2], mean))
lapply(x, function(x) sapply(subset(x, select=colnames(test_features) %in% retained_feature_labels$V2, mean))
)
lapply(x, function(x) sapply(subset(x, select=colnames(test_features) %in% retained_feature_labels$V2), mean)
)
lapply(x, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2, mean))
)
lapply(x, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean))
x <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- split(all_features, list(all_features$Subject, all_features$Activity))
lapply(averages, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean))
averages
averages <- split(all_features, list(all_features$Subject, all_features$Activity))
lapply(averages, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean))
str(averages)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean(na.rm=T)))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans)
str(averages)
str(averages)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans(na.rm = FALSE))
str(averages)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans(na.rm = FALSE))
str(aveages)
str(averages)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans(na.rm = FALSE))
str(averages)
str(averages)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans(na.rm = FALSE))
groups
groups
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans(na.rm = FALSE))
averages
averages
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colmeans(na.rm = TRUE))
averages
averages
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colMeans(na.rm = TRUE))
)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colMeans(na.rm = TRUE)))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), means))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean)
)
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), mean))
averages
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(subset(x, select=colnames(x) %in% retained_feature_labels$V2), colMeans(na.rm=TRUE)))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) sapply(y <- subset(x, select=colnames(x) %in% retained_feature_labels$V2), colMeans(y, na.rm=TRUE)))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) y <- subset(x, select=colnames(x) %in% retained_feature_labels$V2) sapply(y, colMeans(y, na.rm=TRUE)))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) {y <- subset(x, select=colnames(x) %in% retained_feature_labels$V2); sapply(y, colMeans(y, na.rm=TRUE))})
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) {y <- subset(x, select=colnames(x) %in% retained_feature_labels$V2); sapply(y, colMeans(na.rm=TRUE))})
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) colMeans(subset(x, select=colnames(x) %in% retained_feature_labels$V2), na.rm=TRUE))
averages
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) colMeans(subset(x, select=colnames(x) %in% retained_feature_labels$V2), na.rm=FALSE))
averages
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, colMeans(subset(groups, select=colnames(x) %in% retained_feature_labels$V2), na.rm=FALSE))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, colMeans(subset(groups, select=colnames(groups) %in% retained_feature_labels$V2), na.rm=FALSE))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) colMeans(subset(x, select=colnames(x) %in% retained_feature_labels$V2), na.rm=FALSE))
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) colMeans(subset(x, select=colnames(x) %in% retained_feature_labels$V2), na.rm=TRUE))
averages
groups <- split(all_features, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) colMeans(subset(x, select=colnames(x) %in% retained_feature_labels$V2), na.rm=TRUE))
final_data = unsplit(averages)
final_data = unsplit(averages, list(all_features$Subject, all_features$Activity))
warnings()
final_data = unsplit(averages, list(all_features$Subject, all_features$Activity))
final_data
str(final_data)
final_data = unsplit(averages, list(all_features$Subject, all_features$Activity))
str(averages)
final_data = unsplit(averages, list(averages$Subject, averages$Activity))
str(final_data)
final_data
names(averages)
final_data = unsplit(averages, names(averages))
warnings()
final_data = unsplit(averages, names(averages))
str(final_data)
final_data
averages
final_data = unsplit(averages, names(averages))
final_data
final_data = unsplit(groups, list(all_features$Subject, all_features$Activity)))
final_data = unsplit(groups, list(all_features$Subject, all_features$Activity))
final_data
final_data = unsplit(groups, list(all_features$Subject, all_features$Activity))
averages <- lapply(groups, function(x) colMeans(na.rm=TRUE))
averages <- lapply(groups, function(x) colMeans(x, na.rm=TRUE))
averages <- lapply(groups, colMeans(groups, na.rm=TRUE))
averages <- lapply(groups, colMeans(groups, na.rm=TRUE))
groups
averages <- lapply(groups, function(x) colMeans(x, na.rm=TRUE))
